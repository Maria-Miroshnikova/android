push() - генерирует ключ автоматически
ХОРОШО ЧЕМ: не надо помнить ключи других, можно ассинхронно
добавлять новые записи от многих аккаунтов

ChildEventListener() - позволяет узнать, какое именно событие
там происходит с детьми (добавка/изменение/удаление/переупорядочивание)
Его рекомендуют для отслеживание событий со списками данных??
ОТЛИЧИЕ в том, что datasnapshot, который он пришлет, содержит
данные (value, не key) изменившегося child`а!!

ValueEventListener() в datasnapshot возвращает всех детей и
по всем можно индивидуально пройтись

Не забывать откреплять слушателей!

Можно данные сортировать и фильтровать. Это дорого!
нужно усовершенствовать там какие-то правила, см док

СОРТИРОВКА:
Query query = path.orderByChild("name")
список детей узла path, отсортированных по детям этих детей "name"
можно более специфическое упорядочивание по полю поля поля: "man/name/first name"
btw sorting is from minor to major

orderByValue - целиком Value, не конкретный ребенок (в чем отличие от child у которого разветвляется указанный ребенок? ->
orderByChild все разветвления начнет сортировать после конкретных полей, а этот - все вместе отсортирует)

orderByKey - по ключи

нельзя нацепить несколько сортировок на одну query - ошибка!

ФИЛЬТР:
отсортированный query можно отвильтровывать:
- ограничить количество элементов (с начала, с конца)
- ограничить значение элемента (больше, меньше, строго и не строго)
- ограничить значение элемента конкретным значением (равенство)

можно цеплять несколько фильтров на одну query!

QUERY - это шаблон, какой вызов таблице я хочу сделать. Но вызова еще как такового не происходит. Чтобы увидеть, что же там
в вызове, нужно его совершить - добавив слушателя и пройдясь по содержимому
DatabaseReference - подкласс Query

можно фильтровать без упорядочивания если речь о количестве
нельзя фифльтровать без упорядочивания по значению, т к значение указывается через порядок!
--------
КАРТИНКИ

нужен понятный интерфейс приложения, хранящего документы для просмотра

сделать:
- систему добавления
- систему изменения 
- систему получения (как хранить на мобиле? превью? кэш?)

putBytes (это для ImageView), putStream (это вроде тоже для локальных), putFile (это для локальных файлов)